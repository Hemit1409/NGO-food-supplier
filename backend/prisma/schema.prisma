generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Donor {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String   @unique
  password    String
  isVerified  Boolean  @default(false)
  otp         String?  
  otpExpiry   DateTime? 
  name        String?
  address     String?
  city        String?
  state       String?
  pincode     String?
  phone       String?
  photo       String?
  donorType   DonorType?
  restaurantName String? 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  FoodDetails FoodDetails[]
  notifications Notification[]
}

enum DonorType {
  INDIVIDUAL
  RESTAURANT
}

model NGO {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  address     String
  email       String   @unique
  phoneNumber String
  city        String
  pincode     String
  certificate String
  isApproved  Boolean  @default(false)
  username    String?  
  password    String?  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String?
  contactTime String?

  FoodDetails FoodDetails[]
}

model FoodDetails {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  donorId       String   @db.ObjectId
  foodType      String
  foodCategory  String
  address       String
  latitude      Float?
  longitude     Float?
  City          String?
  noOfDishes    Int
  preparationDate DateTime
  expiryDate    DateTime
  status        String   @default("available")
  ngoId         String?  @db.ObjectId
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  donor         Donor?     @relation(fields: [donorId], references: [id])
  ngo           NGO?       @relation(fields: [ngoId], references: [id])
}

model contactus {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  email   String   @unique
  message String
}

model Notification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  donorId   String   @db.ObjectId
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())

  donor Donor @relation(fields: [donorId], references: [id], onDelete: Cascade)
}
